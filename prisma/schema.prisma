datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  password Password?
  roles    Role[]
  sessions Session[]
  notes    Note[]
}

model Password {
  hash String

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Role {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  users       User[]
  permissions Permission[]
}

model Permission {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  roles Role[]
}

model Session {
  id String @id @default(cuid())

  createdAt      DateTime @default(now()) @db.Timestamptz(3)
  expirationDate DateTime? @db.Timestamptz(3)
  rememberMe     Boolean?

  user        User?         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String?
  sessionData SessionData?
}

model SessionData {
  id String @id @default(cuid())

  theme  String
  locale String

  session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sessionId String  @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}
